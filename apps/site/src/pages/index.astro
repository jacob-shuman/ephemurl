---
import { GoogleFontsOptimizer } from "astro-google-fonts-optimizer";
import tw from "clsx";
import { buildTheme, createConfig } from "ephemurl-db";
import packageJson from "../../package.json";
import Card from "../components/Card.astro";
import Nav from "../components/Nav.svelte";
import Utils from "../components/Utils.svelte";
import { games, modules, tools } from "../constants";

const params = Object.fromEntries(Astro.url.searchParams.entries());
const ssrConfig = createConfig(params);
---

<html
  lang="en"
  style={buildTheme(ssrConfig)}
  class={tw(
    (ssrConfig.theme.mode === "dark" ||
      ssrConfig.theme.mode === "system-dark") &&
      "dark",
    "transition-all duration-100 ease-out",
    "overflow-y-scroll scrollbar scrollbar-track-transparent"
  )}
>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={packageJson.description} />
    <title>ephemurl</title>

    <GoogleFontsOptimizer
      url="https://fonts.bunny.net/css?family=rubik-mono-one:400"
    />
    <GoogleFontsOptimizer
      url="https://fonts.bunny.net/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    />
  </head>

  <body
    class="font-rubik p-4 sm:p-8 lg:p-12 flex flex-col gap-y-9 transition-all duration-100 ease-out"
  >
    <Utils client:load {params} {ssrConfig} />

    <Nav client:load {ssrConfig} {params} />

    <section class="flex flex-col gap-y-3">
      <h3
        class={tw(
          "font-bold text-lg",
          tools.filter(({ status }) => status === "ready").length < 1 &&
            "opacity-40"
        )}
      >
        TOOLS
      </h3>

      <div class="flex flex-wrap gap-8">
        {
          tools
            .sort((t1, t2) => t1.name.localeCompare(t2.name))
            .sort((t1, t2) => {
              const statusOrder = {
                ready: 0,
                planned: 1,
                unplanned: 2,
              };
              return statusOrder[t1.status] - statusOrder[t2.status];
            })
            .map((t) => <Card {...t} />)
        }
      </div>
    </section>

    <section class="flex flex-col gap-y-3">
      <h3
        class={tw(
          "font-bold text-lg",
          games.filter(({ status }) => status === "ready").length < 1 &&
            "opacity-40"
        )}
      >
        GAMES
      </h3>

      <div class="flex flex-wrap gap-8">
        {
          games
            .sort((g1, g2) => g1.name.localeCompare(g2.name))
            .sort(
              (g1, g2) =>
                Number(g2.status === "ready") - Number(g1.status === "ready")
            )
            .map((g) => <Card {...g} />)
        }
      </div>
    </section>

    <section class="flex flex-col gap-y-3">
      <h3
        class={tw(
          "font-bold text-lg",
          modules.filter(({ status }) => status === "ready").length < 1 &&
            "opacity-40"
        )}
      >
        MODULES
      </h3>

      <div class="flex flex-wrap gap-8">
        {
          modules
            .sort((m1, m2) => m1.name.localeCompare(m2.name))
            .sort(
              (m1, m2) =>
                Number(m2.status === "ready") - Number(m1.status === "ready")
            )
            .map((m) => <Card {...m} />)
        }
      </div>
    </section>

    <style is:global>
      html {
        @apply bg-bg-500 text-bg-100;
        @apply scrollbar-thumb-bg-400;
        @apply selection:bg-bg-300;
        @apply selection:bg-bg-400;
      }
      html.dark {
        @apply bg-bg-dark-500 text-bg-dark-100;
        @apply scrollbar-thumb-bg-dark-400;
        @apply selection:bg-bg-dark-400;
      }
    </style>
  </body>
</html>
